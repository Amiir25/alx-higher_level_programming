This is a text file to test the 2-matrix_divided.py file

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test for simple numbers

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Test for differnt digits

    >>> matrix_divided([[1, 5, 10], [15, 20, 25]], 30)
    [[0.03, 0.17, 0.33], [0.5, 0.67, 0.83]]

Test for floating point point numbers

    >>> matrix_divided([[1.275, 2.275, 3.275], [4.275, 5.275, 6.275]], 3)
    [[0.42, 0.76, 1.09], [1.43, 1.76, 2.09]]

Test for different sized rows

    >>> matrix_divided([[4, 6], [7, 8, 9]], 3)
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
    TypeError: Each row of the matrix must have the same size

Test for lower number of elements

    >>> matrix_divided([[4, 6], [7, 8]], 3)
    [[1.33, 2.0], [2.33, 2.67]]

Test for different sized rows

    >>> matrix_divided([[4, 6], [8]], 3)
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
    TypeError: Each row of the matrix must have the same size

Test fo dividing by zero

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
    ZeroDivisionError: division by zero

Test for non-numeric elements

    >>> matrix_divided([[4, "H", 6], [7, 8, 9]], 3)
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
    TypeError: Each element of the matrix must be a number
